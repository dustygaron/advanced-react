{"version":3,"file":"static/webpack/static/development/pages/items.js.fe25f3e1a5d87ed42ee6.hot-update.js","sources":["webpack:///./components/DeleteItem.js"],"sourcesContent":["import React from 'react'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { ALL_ITEMS_QUERY } from './Items'\n\nconst DELETE_ITEM_MUTATION = gql`\n  mutation DELETE_ITEM_MUTATION( $id: ID! ) {\n    deleteItem(id: $id ) {\n      id\n    }\n  }\n`\n\nclass DeleteItem extends React.Component {\n\n  update = (cache, payload) => {\n    // manually update the cache on the client, so it matches the server\n    // 1. Read the cache for the items we want\n    const data = cache.readQuery({ query: ALL_ITEMS_QUERY })\n    console.log(data, payload)\n    // 2. Filter the deleted item out of the page\n    // data.items = data.items.filter(item => item.id !== payload.data.deleteItem.id)\n    // 3. Put the items back!\n    // cache.writeQuery({ query: ALL_ITEMS_QUERY, data })\n  }\n\n\n  render() {\n    return (\n      <Mutation\n        mutation={DELETE_ITEM_MUTATION}\n        variables={{ id: this.props.id }}\n        update={this.update}\n      >\n        {(deleteItem, { error }) => (\n          <button onClick={() => {\n            if (confirm('Are you sure you want to delete this item?')) {\n              deleteItem().catch(err => {\n                alert(err.message)\n              })\n            }\n          }}\n          >\n            {this.props.children}\n          </button>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default DeleteItem\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAOA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAcA;;;;AAnCA;AACA;AAqCA;;;;A","sourceRoot":""}