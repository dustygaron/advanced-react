{"version":3,"file":"static/webpack/static/development/pages/permissions.js.ecec993a44f4b185fe88.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import { Query, Mutation } from 'react-apollo'\nimport Error from './ErrorMessage'\nimport gql from 'graphql-tag'\nimport Table from './styles/Table'\nimport SickButton from './styles/SickButton'\nimport PropTypes from 'prop-types'\n\nconst possiblePermissions = [\n  'ADMIN',\n  'USER',\n  'ITEMCREATE',\n  'ITEMUPDATE',\n  'ITEMDELETE',\n  'PERMISSIONUPDATE',\n]\n\nconst UPDATE_PERMISSIONS_MUTATION = gql`\n  mutation updatedPermissions($permissions: [Permission], $userId: ID!) {\n    updatedPermissions(permissions: $permissions, userId: $userId) {\n      id\n      permissions\n      name\n      email\n    }\n  }\n\n`\n\nconst ALL_USERS_QUERY = gql`\n  query {\n    users {\n      id\n      name\n      email\n      permissions\n    }\n  }\n`\n\nconst Permissions = props => (\n  <Query query={ALL_USERS_QUERY}>\n    {({ data, loading, error }) => (\n      <div>\n        <Error error={error} />\n        <div>\n          <h2>Manage Permissions</h2>\n          <Table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Email</th>\n                {possiblePermissions.map(permission => <th key={permission}>{permission}</th>)}\n                <th>üëáüèª</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.users.map(user => <User user={user} key={user.id} />)}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    )}\n  </Query>\n)\n\n\nclass User extends React.Component {\n\n  static propTypes = {\n    user: PropTypes.shape({\n      name: PropTypes.string,\n      email: PropTypes.string,\n      id: PropTypes.string,\n      permissions: PropTypes.array,\n    }).isRequired\n  }\n\n  state = {\n    permissions: this.props.user.permissions,\n\n  }\n\n  handlePermissionChange = e => {\n    const checkbox = e.target\n    // Take a copy of the current permissions\n    let updatedPermissions = [...this.state.permissions]\n    // Figure out if we need to remove or add this permission\n    if (checkbox.checked) {\n      // Add it in \n      updatedPermissions.push(checkbox.value)\n    } else {\n      updatedPermissions = updatedPermissions.filter(permission => permission !== checkbox.value)\n    }\n    this.setState({ permissions: updatedPermissions })\n    console.log(updatedPermissions);\n  }\n\n\n  render() {\n    const user = this.props.user\n    return (\n\n      <Mutation mutation={UPDATE_PERMISSIONS_MUTATION} variables={{\n        permissions: this.state.permissions,\n        userId: this.props.user.id\n      }}>\n        {(updatePermissions, { loading, error }) => (\n          <>\n            {error &&\n              <tr>\n                <td colspan='8'>\n                  <Error error={error} />\n                </td>\n              </tr>\n            }\n\n            <tr>\n              <td>{user.name}</td>\n              <td>{user.email}</td>\n\n              {possiblePermissions.map(permission => (\n                <td key={permission}>\n                  <label htmlFor={`${user.id}-permission-${permission}`}>\n                    <input\n                      type=\"checkbox\"\n                      checked={this.state.permissions.includes(permission)}\n                      id={`${user.id}-permission-${permission}`}\n                      value={permission}\n                      onChange={this.handlePermissionChange}\n                    />\n                  </label>\n                </td>\n              ))}\n\n              <td>\n                <SickButton\n                  type='button'\n                  disabled={loading}\n                  onClick={updatePermissions}\n                >\n                  Update\n              </SickButton>\n              </td>\n            </tr>\n          </>\n        )}\n      </Mutation>\n    )\n  }\n}\n\n\nexport default Permissions"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AAYA;AACA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfA;AAFA;AACA;AA0BA;;;;;;;;;;;;;;;;;;AAWA;AACA;AADA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;;AAEA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7BA;AA0CA;;;;AAlFA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAmFA;;;;A","sourceRoot":""}